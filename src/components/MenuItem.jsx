import { Link } from 'gatsby';
import Icon, { ICONS } from '../components/Icon';
import PropTypes from 'prop-types';
import React from 'react';
import styles from './Header.module.scss';

const menuItemPropTypes = {
  onClick: PropTypes.func,
  id: PropTypes.string,
  text: PropTypes.string.isRequired,
  path: PropTypes.string.isRequired,
};
menuItemPropTypes.menuItems = PropTypes.arrayOf(PropTypes.shape(menuItemPropTypes));

export default class MenuItem extends React.Component {
  constructor() {
    super();
    this.state = {
      active: false,
    };
  }

  static propTypes = menuItemPropTypes;

  hasChild() {
    return Array.isArray(this.props.menuItems) && this.props.menuItems.length > 0;
  }
  hasChildMenuItemClick(event) {
    this.setState(previousState => ({ active: !previousState.active }));
    if (this.props.onClick && typeof this.props.onClick == 'function') {
      this.props.onClick();
    }
    if (this.hasChild()) {
      event.preventDefault();
    }
  }
  render() {
    const { id, text, path, menuItems } = this.props;
    return (
      <li
        onMouseEnter={() => this.setState({ active: true })}
        onMouseLeave={() => this.setState({ active: false })}
        className={this.state.active ? styles.navActive : null}
      >
        <Link to={`${path}#${id}`} onClick={event => this.hasChildMenuItemClick(event)}>
          {text}
          {this.hasChild() && (
            <Icon icon={this.state.active ? ICONS.CHEVRON_UP : ICONS.CHEVRON_DOWN} />
          )}
        </Link>
        {/* We use CSS to hide children. We can't rely on mouseover and state here because we want the html to be generated by gatsby for SEO purpose */}
        {this.hasChild() && (
          <div>
            <ul>
              {menuItems.map(menuItem => (
                <MenuItem key={menuItem.id} {...menuItem} />
              ))}
            </ul>
          </div>
        )}
      </li>
    );
  }
}
